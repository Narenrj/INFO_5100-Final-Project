/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ClinicRegistrationRequest;
import Business.WorkQueue.PHDAdminRequest;
import Business.WorkQueue.PatientRegisterationRequest;
import Business.WorkQueue.VaccineManufacturerRequest;
import Business.WorkQueue.VaccineProductionRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author psrib
 */
public class ManageInventory extends javax.swing.JPanel {

    /**
     * Creates new form ManageInventory
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
        private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public ManageInventory(JPanel userProcessContainer,  EcoSystem business, UserAccount userAccount) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.system = business;
        populateTable();
        jPanel1.setVisible(false);
        getVaccineStockTable();
    }
    
    public void getVaccineStockTable(){
        DefaultTableModel dtm = (DefaultTableModel) stock.getModel();
        dtm.setRowCount(0);
         for(Network n : system.getNetworkList()){
              
            for( Enterprise e : n.getEnterpriseDirectory().getEnterpriseDirectoryList()){
                for( WorkRequest workRequest : e.getWorkQueue().getWorkRequestList() ){
                    if(workRequest instanceof PHDAdminRequest){
                        if( ((PHDAdminRequest) workRequest).getUserAccount().getUsername().
                                equals(userAccount.getEmployee().getName())){
                            HashMap<String, Integer> map = ((PHDAdminRequest) workRequest).getInventoryRequest()
                                    .getVaccineName();
                              for (Map.Entry<String,Integer> entry : map.entrySet()){
                                    Object row[] = new Object[2];
                                    row[0] = entry.getKey();
                                    row[1] = entry.getValue();
                                    dtm.addRow(row);
                              }
         
                        }
                    }
                }
            }
               
        }
    }
    
    public void populateTable()
    {
      DefaultTableModel dtm = (DefaultTableModel) vaccine.getModel();
        dtm.setRowCount(0);
        
        for(Network n : system.getNetworkList()){
               
            for( Enterprise e : n.getEnterpriseDirectory().getEnterpriseDirectoryList()){
                for( WorkRequest workRequest : e.getWorkQueue().getWorkRequestList() ){
                    if(workRequest instanceof VaccineManufacturerRequest){
                        System.out.println("w "+ workRequest);
                        Object row[] = new Object[7];
                        row[0] = ((VaccineManufacturerRequest) workRequest);
                        row[1] = ((VaccineManufacturerRequest) workRequest).getEfficiency();
                        row[2] = ((VaccineManufacturerRequest) workRequest).getManufacturername();
                        row[3] = ((VaccineManufacturerRequest) workRequest).getStatus();
                        row[4] = ((VaccineManufacturerRequest) workRequest).getExpirydate();

                       // row[4] = ((ClinicRegistrationRequest) workRequest).getPractionerName();

                        
                       
                        dtm.addRow(row);
                        
                    }
                }
            }
               
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        vaccine = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        number = new javax.swing.JTextField();
        confirm = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stock = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vaccine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Efficacy", "Manufacturer Name", "Status", "Expiry Date"
            }
        ));
        jScrollPane2.setViewportView(vaccine);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 942, 140));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 153));
        jButton2.setText("Place Order");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 570, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 153));
        jLabel2.setText("VACCINE MANUFACTURER AND STOCK MANAGEMENT");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 640, 46));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 153));
        jLabel4.setText("No of Units");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 100, -1));
        jPanel1.add(number, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 156, -1));

        confirm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        confirm.setForeground(new java.awt.Color(0, 51, 153));
        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });
        jPanel1.add(confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 630, 390, 130));

        stock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Vaccine Name", "Count"
            }
        ));
        jScrollPane1.setViewportView(stock);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 640, 340, 130));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/coronavirus-research-pandemic-epidemiology-concept_74855-5785.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 650, 330));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        int selectedRow = patientTable1.getSelectedRow();
//        
//        if (selectedRow < 0){
//            return;
//        }
//        VaccineManufacturerRequest request = (VaccineManufacturerRequest)patientTable1.getValueAt(selectedRow, 0);
//        VaccineProductionRequest vaccineManufacturerRequest = new VaccineProductionRequest
//        (request.getName(),request.getEfficiency(),request.getManufacturername(),request.getNumberofdoses(),"", new Date() , Integer.parseInt(stocks.getText()) , stateName.getText());
//       
//        vaccineManufacturerRequest.setStatus("Waiting Confirmation");
//        String state = stateName.getText();
//        Network network = system.searchNetworkName(String.valueOf(state));
//        Enterprise enterprise = network.getEnterpriseDirectory().searchEnterprise(request.getManufacturername().toString());
//        if(enterprise ==null){
//            System.out.println("Enterprise is null");
//            //return;
//
//            enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(request.getManufacturername().toString(),
//                Enterprise.EnterpriseType.VaccineProvider);
//        }
//        enterprise.getWorkQueue().getWorkRequestList().add(vaccineManufacturerRequest);        


        jPanel1.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = vaccine.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        VaccineManufacturerRequest request = (VaccineManufacturerRequest)vaccine.getValueAt(selectedRow, 0);
        HashMap<String, Integer> map = new HashMap();
        map.put(request.getName().toLowerCase(), Integer.parseInt(number.getText()));
        request.setStatus("Ordered");
        request.setSender(userAccount);
        request.setMap(map);
        
        //request.setReceiver(userAccount);
                
    }//GEN-LAST:event_confirmActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField number;
    private javax.swing.JTable stock;
    private javax.swing.JTable vaccine;
    // End of variables declaration//GEN-END:variables
}
